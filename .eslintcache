[{"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\index.js":"1","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\App.js":"2","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\reportWebVitals.js":"3","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\store.js":"4","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\index.js":"5","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\errorReducer.js":"6","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\modelReducer.js":"7","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\navbar\\Navbar.js":"8","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\main\\Main.js":"9","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\main-content\\MainContent.js":"10","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\slide-show\\Slideshow.js":"11","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\grid\\Grid.js":"12","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\Helpers\\constants.js":"13"},{"size":502,"mtime":1608234677425,"results":"14","hashOfConfig":"15"},{"size":433,"mtime":1608306508370,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":401,"mtime":1608235628882,"results":"18","hashOfConfig":"15"},{"size":253,"mtime":1608235628877,"results":"19","hashOfConfig":"15"},{"size":150,"mtime":1608235628875,"results":"20","hashOfConfig":"15"},{"size":165,"mtime":1608235628879,"results":"21","hashOfConfig":"15"},{"size":2298,"mtime":1608308766505,"results":"22","hashOfConfig":"15"},{"size":227,"mtime":1608306508380,"results":"23","hashOfConfig":"15"},{"size":589,"mtime":1608308337901,"results":"24","hashOfConfig":"15"},{"size":3100,"mtime":1608306508376,"results":"25","hashOfConfig":"15"},{"size":737,"mtime":1608306864738,"results":"26","hashOfConfig":"15"},{"size":4123,"mtime":1608307945628,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7jpcjt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\index.js",[],["58","59"],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\App.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\reportWebVitals.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\store.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\index.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\errorReducer.js",["60"],"const initialState = \"\";\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\modelReducer.js",["61"],"const initialState = {\r\n  list: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\navbar\\Navbar.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\main\\Main.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\main-content\\MainContent.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\slide-show\\Slideshow.js",["62"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Slideshow.scss\";\r\n\r\nconst Slideshow = (props) => {\r\n  const { images, auto, showArrows } = props;\r\n  const [state, setState] = useState({\r\n    slideShow: images[0],\r\n    slideIndex: 0,\r\n  });\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [sliderInterval, setSliderInterval] = useState(0);\r\n  const { slideShow, slideIndex } = state;\r\n  let currentSlideIndex = 0;\r\n\r\n  useEffect(() => {\r\n    if (auto) {\r\n      const timeInterval = setInterval(() => {\r\n        autoMoveSlide();\r\n      }, 5000);\r\n      setSliderInterval(timeInterval);\r\n\r\n      return () => {\r\n        clearInterval(timeInterval);\r\n        clearInterval(sliderInterval);\r\n      };\r\n    }\r\n  }, [images, auto]);\r\n\r\n  const autoMoveSlide = () => {\r\n    let lastIndex = 0;\r\n    lastIndex = currentSlideIndex + 1;\r\n    currentSlideIndex = lastIndex >= images.length ? 0 : lastIndex;\r\n    setState((prev) => ({\r\n      ...prev,\r\n      slideIndex: currentSlideIndex,\r\n      slideShow: images[currentSlideIndex],\r\n    }));\r\n  };\r\n\r\n  const moveSlideWithArrows = (type) => {\r\n    let index = currentIndex;\r\n    if (type === \"prev\") {\r\n      if (currentIndex <= 0) {\r\n        index = images.length - 1;\r\n      } else {\r\n        index -= 1;\r\n      }\r\n    } else {\r\n      if (currentIndex < images.length) {\r\n        index += 1;\r\n      }\r\n      if (index === images.length) {\r\n        index = 0;\r\n      }\r\n    }\r\n    setCurrentIndex(index);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      slideIndex: index,\r\n      slideShow: images[index],\r\n    }));\r\n  };\r\n\r\n  const RenderArrows = () => {\r\n    return (\r\n      <div className=\"slider-arrows\">\r\n        <div\r\n          className=\"slider-arrow slider-arrow--left\"\r\n          onClick={() => moveSlideWithArrows(\"prev\")}\r\n        />\r\n        <div\r\n          className=\"slider-arrow slider-arrow--right\"\r\n          onClick={() => moveSlideWithArrows(\"next\")}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Indicators = (props) => {\r\n    const { currentSlide } = props;\r\n    const listIndicators = images.map((slide, i) => {\r\n      const btnClasses =\r\n        i === currentSlide\r\n          ? \"slider-navButton slider-navButton--active\"\r\n          : \"slider-navButton\";\r\n      return <button className={btnClasses} key={i} />;\r\n    });\r\n    return <div className=\"slider-nav\">{listIndicators}</div>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"slider\">\r\n        <div className=\"slider-slides\">\r\n          {images && images.length && slideShow && (\r\n            <div\r\n              className=\"slider-image\"\r\n              style={{ backgroundImage: `url(${slideShow.url})` }}\r\n            ></div>\r\n          )}\r\n        </div>\r\n        <Indicators currentSlide={slideIndex} />\r\n        {showArrows ? <RenderArrows /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSlideshow.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  auto: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  currentSlide: PropTypes.number,\r\n};\r\n\r\nexport default Slideshow;\r\n","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\grid\\Grid.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\Helpers\\constants.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":1,"nodeType":"69","endLine":8,"endColumn":3},{"ruleId":"67","severity":1,"message":"68","line":5,"column":1,"nodeType":"69","endLine":10,"endColumn":3},{"ruleId":"70","severity":1,"message":"71","line":29,"column":6,"nodeType":"72","endLine":29,"endColumn":20,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'autoMoveSlide' and 'sliderInterval'. Either include them or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [images, auto, autoMoveSlide, sliderInterval]",{"range":"79","text":"80"},[780,794],"[images, auto, autoMoveSlide, sliderInterval]"]