[{"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\index.js":"1","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\App.js":"2","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\reportWebVitals.js":"3","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\store.js":"4","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\index.js":"5","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\errorReducer.js":"6","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\navbar\\Navbar.js":"7","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\main\\Main.js":"8","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\main-content\\MainContent.js":"9","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\slide-show\\Slideshow.js":"10","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\grid\\Grid.js":"11","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\Helpers\\constants.js":"12","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\paginate\\Paginate.js":"13","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\rating\\Rating.js":"14","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\movieReducer.js":"15","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\types.js":"16","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\actions\\movies.js":"17","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\services\\service.js":"18","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\spinner\\Spinner.js":"19"},{"size":502,"mtime":1608234677425,"results":"20","hashOfConfig":"21"},{"size":402,"mtime":1608671506967,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":401,"mtime":1608235628882,"results":"24","hashOfConfig":"21"},{"size":261,"mtime":1609887506746,"results":"25","hashOfConfig":"21"},{"size":253,"mtime":1609887502675,"results":"26","hashOfConfig":"21"},{"size":3314,"mtime":1609887563277,"results":"27","hashOfConfig":"21"},{"size":1512,"mtime":1609887245427,"results":"28","hashOfConfig":"21"},{"size":2296,"mtime":1609887098005,"results":"29","hashOfConfig":"21"},{"size":3193,"mtime":1608676040387,"results":"30","hashOfConfig":"21"},{"size":1402,"mtime":1609887088508,"results":"31","hashOfConfig":"21"},{"size":2765,"mtime":1608583880252,"results":"32","hashOfConfig":"21"},{"size":1156,"mtime":1608583576822,"results":"33","hashOfConfig":"21"},{"size":1476,"mtime":1608584775543,"results":"34","hashOfConfig":"21"},{"size":908,"mtime":1609887456588,"results":"35","hashOfConfig":"21"},{"size":223,"mtime":1608649353806,"results":"36","hashOfConfig":"21"},{"size":1809,"mtime":1608743035656,"results":"37","hashOfConfig":"21"},{"size":441,"mtime":1609088376013,"results":"38","hashOfConfig":"21"},{"size":292,"mtime":1608674099560,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"7jpcjt",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\index.js",[],["83","84"],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\App.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\reportWebVitals.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\store.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\index.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\errorReducer.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\navbar\\Navbar.js",["85"],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\main\\Main.js",["86","87"],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\main-content\\MainContent.js",["88","89","90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./MainContent.scss\";\r\nimport Slideshow from \"../slide-show/Slideshow\";\r\nimport Grid from \"../grid/Grid\";\r\n// import { images } from \"../../Helpers/constants\";\r\nimport Paginate from \"../paginate/Paginate\";\r\nimport { getMovies } from \".../../../src/redux/actions/movies\";\r\nimport { IMAGE_URL } from \"../../../services/service\";\r\n\r\nconst MainContent = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [images, setImages] = useState([]);\r\n  const movies = useSelector((state) => state.movies);\r\n  const moviesArray = movies.list;\r\n  const page = movies.page;\r\n  const movieType = movies.movieType;\r\n  const total_pages = movies.totalPages;\r\n\r\n  const randomMovies = moviesArray\r\n    .sort(() => Math.random() - Math.random())\r\n    .slice(0, 4);\r\n\r\n  useEffect(() => {\r\n    if (randomMovies.length) {\r\n      const IMAGES = [\r\n        {\r\n          id: 1,\r\n          url: `${IMAGE_URL}${randomMovies[0].backdrop_path}`,\r\n        },\r\n        {\r\n          id: 2,\r\n          url: `${IMAGE_URL}${randomMovies[1].backdrop_path}`,\r\n        },\r\n        {\r\n          id: 3,\r\n          url: `${IMAGE_URL}${randomMovies[2].backdrop_path}`,\r\n        },\r\n        {\r\n          id: 4,\r\n          url: `${IMAGE_URL}${randomMovies[3].backdrop_path}`,\r\n        },\r\n      ];\r\n      setImages(IMAGES);\r\n    }\r\n  }, []);\r\n  const HEADER_TYPE = {\r\n    now_playing: \"Now Playing\",\r\n    popular: \"Popular\",\r\n    top_rated: \"Top Rated\",\r\n    upcoming: \"Upcoming\",\r\n  };\r\n\r\n  const paginate = (type) => {\r\n    if (type === \"prev\" && currentPage > 1) {\r\n      setCurrentPage((prev) => prev - 1);\r\n    } else {\r\n      setCurrentPage((prev) => prev + 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"main-content\">\r\n      <Slideshow images={images} auto={true} showArrows={true} />\r\n      <div className=\"grid-model-title\">\r\n        <div className=\"modelType\">{HEADER_TYPE[movieType]}</div>\r\n        <div className=\"paginate\">\r\n          <Paginate\r\n            currentPage={currentPage}\r\n            totalPages={total_pages}\r\n            paginate={paginate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Grid images={images} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\slide-show\\Slideshow.js",["92"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Slideshow.scss\";\r\n\r\nconst Slideshow = (props) => {\r\n  const { images, auto, showArrows } = props;\r\n  const [state, setState] = useState({\r\n    slideShow: images[0],\r\n    slideIndex: 0,\r\n  });\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [sliderInterval, setSliderInterval] = useState(0);\r\n  const { slideShow, slideIndex } = state;\r\n  let currentSlideIndex = 0;\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      slideIndex: 0,\r\n      slideShow: images[0],\r\n    });\r\n    if (auto) {\r\n      const timeInterval = setInterval(() => {\r\n        autoMoveSlide();\r\n      }, 5000);\r\n      setSliderInterval(timeInterval);\r\n\r\n      return () => {\r\n        clearInterval(timeInterval);\r\n        clearInterval(sliderInterval);\r\n      };\r\n    }\r\n  }, [images, auto]);\r\n\r\n  const autoMoveSlide = () => {\r\n    let lastIndex = 0;\r\n    lastIndex = currentSlideIndex + 1;\r\n    currentSlideIndex = lastIndex >= images.length ? 0 : lastIndex;\r\n    setState((prev) => ({\r\n      ...prev,\r\n      slideIndex: currentSlideIndex,\r\n      slideShow: images[currentSlideIndex],\r\n    }));\r\n  };\r\n\r\n  const moveSlideWithArrows = (type) => {\r\n    let index = currentIndex;\r\n    if (type === \"prev\") {\r\n      if (currentIndex <= 0) {\r\n        index = images.length - 1;\r\n      } else {\r\n        index -= 1;\r\n      }\r\n    } else {\r\n      if (currentIndex < images.length) {\r\n        index += 1;\r\n      }\r\n      if (index === images.length) {\r\n        index = 0;\r\n      }\r\n    }\r\n    setCurrentIndex(index);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      slideIndex: index,\r\n      slideShow: images[index],\r\n    }));\r\n  };\r\n\r\n  const RenderArrows = () => {\r\n    return (\r\n      <div className=\"slider-arrows\">\r\n        <div\r\n          className=\"slider-arrow slider-arrow--left\"\r\n          onClick={() => moveSlideWithArrows(\"prev\")}\r\n        />\r\n        <div\r\n          className=\"slider-arrow slider-arrow--right\"\r\n          onClick={() => moveSlideWithArrows(\"next\")}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Indicators = (props) => {\r\n    const { currentSlide } = props;\r\n    const listIndicators = images.map((slide, i) => {\r\n      const btnClasses =\r\n        i === currentSlide\r\n          ? \"slider-navButton slider-navButton--active\"\r\n          : \"slider-navButton\";\r\n      return <button className={btnClasses} key={i} />;\r\n    });\r\n    return <div className=\"slider-nav\">{listIndicators}</div>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"slider\">\r\n        <div className=\"slider-slides\">\r\n          {images && images.length && slideShow && (\r\n            <div\r\n              className=\"slider-image\"\r\n              style={{ backgroundImage: `url(${slideShow.url})` }}\r\n            ></div>\r\n          )}\r\n        </div>\r\n        <Indicators currentSlide={slideIndex} />\r\n        {showArrows ? <RenderArrows /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSlideshow.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  auto: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  currentSlide: PropTypes.number,\r\n};\r\n\r\nexport default Slideshow;\r\n","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\grid\\Grid.js",["93","94","95","96"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Rating from \"../rating/Rating\";\r\nimport \"./Grid.scss\";\r\nimport { getMovies } from \".../../../src/redux/actions/movies\";\r\nimport { IMAGE_URL } from \"../../../services/service\";\r\n\r\nconst Grid = (props) => {\r\n  const moviesArray = useSelector((state) => state.movies.list);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        {moviesArray.map((data, i) => (\r\n          <div key={uuidv4()}>\r\n            <div\r\n              className=\"grid-cell\"\r\n              style={{\r\n                backgroundImage: `url(${IMAGE_URL}${data.poster_path})`,\r\n              }}\r\n            >\r\n              <div className=\"grid-read-more\">\r\n                {/* <button className=\"grid-cell-button\">Read More</button> */}\r\n              </div>\r\n              <div className=\"grid-detail\">\r\n                <span className=\"grid-detail-title\">{data.title}</span>\r\n                <div className=\"grid-detail-rating\">\r\n                  <Rating rating={data.vote_average} totalStars={10} />\r\n                  &nbsp;&nbsp;\r\n                  <div className=\"grid-vote-average\">{data.vote_average}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\Helpers\\constants.js",[],["97","98"],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\paginate\\Paginate.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\content\\rating\\Rating.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\reducers\\movieReducer.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\types.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\redux\\actions\\movies.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\services\\service.js",[],"C:\\PERSONAL\\Big Data Projects\\React\\aname\\src\\components\\spinner\\Spinner.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":49,"column":6,"nodeType":"105","endLine":49,"endColumn":12,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":24},{"ruleId":"107","severity":1,"message":"111","line":15,"column":9,"nodeType":"109","messageId":"110","endLine":15,"endColumn":20},{"ruleId":"107","severity":1,"message":"112","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"113","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":19},{"ruleId":"107","severity":1,"message":"114","line":17,"column":9,"nodeType":"109","messageId":"110","endLine":17,"endColumn":13},{"ruleId":"103","severity":1,"message":"115","line":47,"column":6,"nodeType":"105","endLine":47,"endColumn":8,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"117","line":34,"column":6,"nodeType":"105","endLine":34,"endColumn":20,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"119","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"120","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"112","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"113","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":19},{"ruleId":"99","replacedBy":"121"},{"ruleId":"101","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'page', and 'totalPages'. Either include them or remove the dependency array.","ArrayExpression",["125"],"no-unused-vars","'setResponsePageNumber' is defined but never used.","Identifier","unusedVar","'moviesArray' is assigned a value but never used.","'useDispatch' is defined but never used.","'getMovies' is defined but never used.","'page' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'randomMovies'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'autoMoveSlide', 'sliderInterval', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["127"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch, page, totalPages, type]",{"range":"134","text":"135"},"Update the dependencies array to be: [randomMovies]",{"range":"136","text":"137"},"Update the dependencies array to be: [images, auto, state, autoMoveSlide, sliderInterval]",{"range":"138","text":"139"},[1126,1132],"[dispatch, page, totalPages, type]",[1431,1433],"[randomMovies]",[873,887],"[images, auto, state, autoMoveSlide, sliderInterval]"]